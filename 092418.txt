bash scripts

for i <list of commands>
do
   <commands>
done

for i
do
    <commands>
done

forloop_demo_01.sh
if test $# -gt 0
#test whether the number of words is greater than 0-if there are no arguments the script does nothing
then
    #there is at least one argument
    echo "words on the line are:"
    let count=1                          #set variable count to have intitial value 1 must of let and no spaces!
    for word                             #for each word on the command line
    do
       echo $count: $word                #display value of count then the word
       let count=$count+1                #add 1 to count
    done
fi

forloop_demo_02.sh
'for number in $*' can be written as 'for number'


awk is a field oriented filter and is a complete programming language
super powerful

awk command in simplest form by default treats lines of text seperated by whitespace as fields

awk '{print $3}' - will print the 3rd field of th e file name given after
awk '{print $1,$3}' - will print the two fields with a space between them

must put in between quotes to protect information from bash trying to execute
quotes prevents the shell from interpreting the character

awk -F, '{print $3}' - seperates the fields by commas
